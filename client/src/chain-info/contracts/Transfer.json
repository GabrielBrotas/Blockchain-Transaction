{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeedMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "transferEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/gabriel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "4": "/home/gabriel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "6": "contracts/Transfer.sol"
  },
  "ast": {
    "absolutePath": "contracts/Transfer.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        220
      ],
      "Context": [
        787
      ],
      "Ownable": [
        174
      ],
      "Transfer": [
        36
      ]
    },
    "id": 37,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "/home/gabriel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 37,
        "sourceUnit": 175,
        "src": "57:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/gabriel/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 37,
        "sourceUnit": 221,
        "src": "130:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 174,
              "src": "247:7:6"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "247:7:6"
          }
        ],
        "canonicalName": "Transfer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 36,
        "linearizedBaseContracts": [
          36,
          174,
          787
        ],
        "name": "Transfer",
        "nameLocation": "235:8:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 8,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "278:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 36,
            "src": "261:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "261:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7,
              "nodeType": "ArrayTypeName",
              "src": "261:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27927b3e",
            "id": 12,
            "mutability": "mutable",
            "name": "tokenPriceFeedMapping",
            "nameLocation": "332:21:6",
            "nodeType": "VariableDeclaration",
            "scope": 36,
            "src": "297:56:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "305:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "297:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "316:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "487:466:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "580:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "580:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 20,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "594:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "580:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752063616e7420657865637574652061207472616e73616374696f6e20746f20796f757273656c66",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "611:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96ab4590f57a687bd88baa81ce00de2497a81ca03358eef93b8b44b00d7e7a5d",
                          "typeString": "literal_string \"you cant execute a transaction to yourself\""
                        },
                        "value": "you cant execute a transaction to yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96ab4590f57a687bd88baa81ce00de2497a81ca03358eef93b8b44b00d7e7a5d",
                          "typeString": "literal_string \"you cant execute a transaction to yourself\""
                        }
                      ],
                      "id": 17,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "559:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:106:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "559:106:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "936:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "936:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 27,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "922:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "914:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 25,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "914:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "914:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "914:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "914:32:6"
                }
              ]
            },
            "functionSelector": "6b55e991",
            "id": 35,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferEther",
            "nameLocation": "445:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "467:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "459:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:13:6"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:6"
            },
            "scope": 36,
            "src": "436:517:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 37,
        "src": "226:2006:6",
        "usedErrors": []
      }
    ],
    "src": "32:2201:6"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104088061007e6000396000f3fe6080604052600436106100555760003560e01c806327927b3e1461005a5780635e5f2e26146100ac5780636b55e991146100cc578063715018a6146100e15780638da5cb5b146100f6578063f2fde38b14610114575b600080fd5b34801561006657600080fd5b50610090610075366004610389565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b857600080fd5b506100906100c73660046103b9565b610134565b6100df6100da366004610389565b61015e565b005b3480156100ed57600080fd5b506100df610208565b34801561010257600080fd5b506000546001600160a01b0316610090565b34801561012057600080fd5b506100df61012f366004610389565b61026e565b6001818154811061014457600080fd5b6000918252602090912001546001600160a01b0316905081565b336001600160a01b03821614156101cf5760405162461bcd60e51b815260206004820152602a60248201527f796f752063616e7420657865637574652061207472616e73616374696f6e207460448201526937903cb7bab939b2b63360b11b60648201526084015b60405180910390fd5b6040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015610204573d6000803e3d6000fd5b5050565b6000546001600160a01b031633146102625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c6565b61026c6000610339565b565b6000546001600160a01b031633146102c85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c6565b6001600160a01b03811661032d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c6565b61033681610339565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561039b57600080fd5b81356001600160a01b03811681146103b257600080fd5b9392505050565b6000602082840312156103cb57600080fd5b503591905056fea2646970667358221220309062a172003c9c4bd8ddc7a4cd5376bb7b337648a7f2a1cebf42a5de6d404e64736f6c63430008090033",
  "bytecodeSha1": "d8786f9ff82e2341bf5a2f731e066b077060545d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "Transfer",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "10": [
            1934,
            1956,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "Transfer.transferEther": {
          "9": [
            580,
            597,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "7": [
            2131,
            2148
          ],
          "8": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "4": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "5": [
            1926,
            1999
          ],
          "6": [
            2009,
            2028
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "3": [
            658,
            675
          ]
        }
      },
      "6": {
        "Transfer.transferEther": {
          "1": [
            559,
            665
          ],
          "2": [
            914,
            946
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
  ],
  "deployedBytecode": "6080604052600436106100555760003560e01c806327927b3e1461005a5780635e5f2e26146100ac5780636b55e991146100cc578063715018a6146100e15780638da5cb5b146100f6578063f2fde38b14610114575b600080fd5b34801561006657600080fd5b50610090610075366004610389565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100b857600080fd5b506100906100c73660046103b9565b610134565b6100df6100da366004610389565b61015e565b005b3480156100ed57600080fd5b506100df610208565b34801561010257600080fd5b506000546001600160a01b0316610090565b34801561012057600080fd5b506100df61012f366004610389565b61026e565b6001818154811061014457600080fd5b6000918252602090912001546001600160a01b0316905081565b336001600160a01b03821614156101cf5760405162461bcd60e51b815260206004820152602a60248201527f796f752063616e7420657865637574652061207472616e73616374696f6e207460448201526937903cb7bab939b2b63360b11b60648201526084015b60405180910390fd5b6040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015610204573d6000803e3d6000fd5b5050565b6000546001600160a01b031633146102625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c6565b61026c6000610339565b565b6000546001600160a01b031633146102c85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c6565b6001600160a01b03811661032d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c6565b61033681610339565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561039b57600080fd5b81356001600160a01b03811681146103b257600080fd5b9392505050565b6000602082840312156103cb57600080fd5b503591905056fea2646970667358221220309062a172003c9c4bd8ddc7a4cd5376bb7b337648a7f2a1cebf42a5de6d404e64736f6c63430008090033",
  "deployedSourceMap": "226:2006:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:56;;;;;;;;;;-1:-1:-1;297:56:6;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;297:56:6;;;;;;-1:-1:-1;;;;;469:32:9;;;451:51;;439:2;424:18;297:56:6;;;;;;;261:30;;;;;;;;;;-1:-1:-1;261:30:6;;;;;:::i;:::-;;:::i;436:517::-;;;;;;:::i;:::-;;:::i;:::-;;1605:92:0;;;;;;;;;;;;;:::i;973:85::-;;;;;;;;;;-1:-1:-1;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;1846:189;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;261:30:6:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;261:30:6;;-1:-1:-1;261:30:6;:::o;436:517::-;580:10;-1:-1:-1;;;;;580:17:6;;;;559:106;;;;-1:-1:-1;;;559:106:6;;900:2:9;559:106:6;;;882:21:9;939:2;919:18;;;912:30;978:34;958:18;;;951:62;-1:-1:-1;;;1029:18:9;;;1022:40;1079:19;;559:106:6;;;;;;;;;914:32;;-1:-1:-1;;;;;914:21:6;;;936:9;914:32;;;;;;;;;936:9;914:21;:32;;;;;;;;;;;;;;;;;;;;;436:517;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;1311:2:9;1177:68:0;;;1293:21:9;;;1330:18;;;1323:30;1389:34;1369:18;;;1362:62;1441:18;;1177:68:0;1109:356:9;1177:68:0;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;1846:189::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;1311:2:9;1177:68:0;;;1293:21:9;;;1330:18;;;1323:30;1389:34;1369:18;;;1362:62;1441:18;;1177:68:0;1109:356:9;1177:68:0;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;1672:2:9;1926:73:0::1;::::0;::::1;1654:21:9::0;1711:2;1691:18;;;1684:30;1750:34;1730:18;;;1723:62;-1:-1:-1;;;1801:18:9;;;1794:36;1847:19;;1926:73:0::1;1470:402:9::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2041:169::-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:286:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:9;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:9:o;513:180::-;572:6;625:2;613:9;604:7;600:23;596:32;593:52;;;641:1;638;631:12;593:52;-1:-1:-1;664:23:9;;513:180;-1:-1:-1;513:180:9:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    226,
    2232
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27927B3E EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x6B55E991 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x389 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x134 JUMP JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x389 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x389 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x1CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F752063616E7420657865637574652061207472616E73616374696F6E2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x37903CB7BAB939B2B633 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x204 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x262 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C6 JUMP JUMPDEST PUSH2 0x26C PUSH1 0x0 PUSH2 0x339 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C6 JUMP JUMPDEST PUSH2 0x336 DUP2 PUSH2 0x339 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SWAP1 PUSH3 0xA17200 EXTCODECOPY SWAP13 0x4B 0xD8 0xDD 0xC7 LOG4 0xCD MSTORE8 PUSH23 0xBB7B337648A7F2A1CEBF42A5DE6D404E64736F6C634300 ADDMOD MULMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        226,
        2232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "LT",
      "path": "6"
    },
    "9": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x55"
    },
    "12": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "SHR",
      "path": "6"
    },
    "19": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "DUP1",
      "path": "6"
    },
    "20": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x27927B3E"
    },
    "25": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "EQ",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A"
    },
    "29": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "30": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "DUP1",
      "path": "6"
    },
    "31": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5E5F2E26"
    },
    "36": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "EQ",
      "path": "6"
    },
    "37": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAC"
    },
    "40": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "41": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "DUP1",
      "path": "6"
    },
    "42": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6B55E991"
    },
    "47": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "EQ",
      "path": "6"
    },
    "48": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCC"
    },
    "51": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "52": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "DUP1",
      "path": "6"
    },
    "53": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "58": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "EQ",
      "path": "6"
    },
    "59": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE1"
    },
    "62": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "63": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "DUP1",
      "path": "6"
    },
    "64": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "69": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "EQ",
      "path": "6"
    },
    "70": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF6"
    },
    "73": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "74": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "DUP1",
      "path": "6"
    },
    "75": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "EQ",
      "path": "6"
    },
    "81": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114"
    },
    "84": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "85": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "86": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "88": {
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "DUP1",
      "path": "6"
    },
    "89": {
      "first_revert": true,
      "fn": null,
      "offset": [
        226,
        2232
      ],
      "op": "REVERT",
      "path": "6"
    },
    "90": {
      "offset": [
        297,
        353
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "91": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "92": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "DUP1",
      "path": "6"
    },
    "93": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "97": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "DUP1",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "REVERT",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "op": "POP"
    },
    "104": {
      "offset": [
        297,
        353
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x90"
    },
    "107": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x75"
    },
    "110": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "111": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "113": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x389"
    },
    "116": {
      "fn": null,
      "jump": "i",
      "offset": [
        297,
        353
      ],
      "op": "JUMP",
      "path": "6"
    },
    "117": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "118": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "120": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "122": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "125": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "DUP2",
      "path": "6"
    },
    "127": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "128": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "130": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "131": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "139": {
      "op": "SHL"
    },
    "140": {
      "op": "SUB"
    },
    "141": {
      "offset": [
        297,
        353
      ],
      "op": "AND",
      "path": "6"
    },
    "142": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "DUP2",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "JUMP",
      "path": "6"
    },
    "144": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "145": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "147": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "154": {
      "op": "SHL"
    },
    "155": {
      "op": "SUB"
    },
    "156": {
      "op": "SWAP1"
    },
    "157": {
      "op": "SWAP2"
    },
    "158": {
      "op": "AND"
    },
    "159": {
      "op": "DUP2"
    },
    "160": {
      "op": "MSTORE"
    },
    "161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "163": {
      "op": "ADD"
    },
    "164": {
      "offset": [
        297,
        353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "166": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "167": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "DUP1",
      "path": "6"
    },
    "168": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "SUB",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "171": {
      "fn": null,
      "offset": [
        297,
        353
      ],
      "op": "RETURN",
      "path": "6"
    },
    "172": {
      "offset": [
        261,
        291
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "173": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "176": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8"
    },
    "179": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "180": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "DUP1",
      "path": "6"
    },
    "183": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "REVERT",
      "path": "6"
    },
    "184": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "185": {
      "op": "POP"
    },
    "186": {
      "offset": [
        261,
        291
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x90"
    },
    "189": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7"
    },
    "192": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "193": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "195": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B9"
    },
    "198": {
      "fn": null,
      "jump": "i",
      "offset": [
        261,
        291
      ],
      "op": "JUMP",
      "path": "6"
    },
    "199": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "200": {
      "fn": null,
      "offset": [
        261,
        291
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "203": {
      "fn": null,
      "jump": "i",
      "offset": [
        261,
        291
      ],
      "op": "JUMP",
      "path": "6"
    },
    "204": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "205": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF"
    },
    "208": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDA"
    },
    "211": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "212": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "214": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x389"
    },
    "217": {
      "fn": "Transfer.transferEther",
      "jump": "i",
      "offset": [
        436,
        953
      ],
      "op": "JUMP",
      "path": "6"
    },
    "218": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "219": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15E"
    },
    "222": {
      "fn": "Transfer.transferEther",
      "jump": "i",
      "offset": [
        436,
        953
      ],
      "op": "JUMP",
      "path": "6"
    },
    "223": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "224": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "STOP",
      "path": "6"
    },
    "225": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "227": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "228": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "229": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "232": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "235": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "236": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "237": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "POP",
      "path": "0"
    },
    "239": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "242": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208"
    },
    "245": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "246": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "247": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "248": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "249": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "250": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "253": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "254": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "256": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "257": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "258": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "259": {
      "op": "POP"
    },
    "260": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "262": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "269": {
      "op": "SHL"
    },
    "270": {
      "op": "SUB"
    },
    "271": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "272": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90"
    },
    "275": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "277": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "283": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "286": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "289": {
      "op": "POP"
    },
    "290": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF"
    },
    "293": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "296": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "297": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "299": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x389"
    },
    "302": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "303": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26E"
    },
    "307": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "308": {
      "offset": [
        261,
        291
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "309": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "DUP2",
      "path": "6"
    },
    "312": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "DUP2",
      "path": "6"
    },
    "313": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "DUP2",
      "path": "6"
    },
    "315": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "LT",
      "path": "6"
    },
    "316": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "320": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "DUP1",
      "path": "6"
    },
    "323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "REVERT",
      "path": "6"
    },
    "324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "DUP3",
      "path": "6"
    },
    "329": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "330": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "333": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "335": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "ADD",
      "path": "6"
    },
    "336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "343": {
      "op": "SHL"
    },
    "344": {
      "op": "SUB"
    },
    "345": {
      "offset": [
        261,
        291
      ],
      "op": "AND",
      "path": "6"
    },
    "346": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        261,
        291
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "347": {
      "op": "POP"
    },
    "348": {
      "offset": [
        261,
        291
      ],
      "op": "DUP2",
      "path": "6"
    },
    "349": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        261,
        291
      ],
      "op": "JUMP",
      "path": "6"
    },
    "350": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "351": {
      "fn": "Transfer.transferEther",
      "offset": [
        580,
        590
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 1
    },
    "352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "358": {
      "op": "SHL"
    },
    "359": {
      "op": "SUB"
    },
    "360": {
      "fn": "Transfer.transferEther",
      "offset": [
        580,
        597
      ],
      "op": "DUP3",
      "path": "6"
    },
    "361": {
      "fn": "Transfer.transferEther",
      "offset": [
        580,
        597
      ],
      "op": "AND",
      "path": "6"
    },
    "362": {
      "fn": "Transfer.transferEther",
      "offset": [
        580,
        597
      ],
      "op": "EQ",
      "path": "6"
    },
    "363": {
      "branch": 9,
      "fn": "Transfer.transferEther",
      "offset": [
        580,
        597
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "364": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CF"
    },
    "367": {
      "branch": 9,
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "368": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "370": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "377": {
      "op": "SHL"
    },
    "378": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "DUP2",
      "path": "6"
    },
    "379": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "382": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "384": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "DUP3",
      "path": "6"
    },
    "385": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "ADD",
      "path": "6"
    },
    "386": {
      "op": "MSTORE"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "391": {
      "op": "DUP3"
    },
    "392": {
      "op": "ADD"
    },
    "393": {
      "op": "MSTORE"
    },
    "394": {
      "op": "PUSH32",
      "value": "0x796F752063616E7420657865637574652061207472616E73616374696F6E2074"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "429": {
      "op": "DUP3"
    },
    "430": {
      "op": "ADD"
    },
    "431": {
      "op": "MSTORE"
    },
    "432": {
      "op": "PUSH10",
      "value": "0x37903CB7BAB939B2B633"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "448": {
      "op": "DUP3"
    },
    "449": {
      "op": "ADD"
    },
    "450": {
      "op": "MSTORE"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "453": {
      "op": "ADD"
    },
    "454": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "455": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "457": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "458": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "DUP1",
      "path": "6"
    },
    "459": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "460": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "SUB",
      "path": "6"
    },
    "461": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "462": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "463": {
      "fn": "Transfer.transferEther",
      "offset": [
        559,
        665
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "464": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x40"
    },
    "466": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "473": {
      "op": "SHL"
    },
    "474": {
      "op": "SUB"
    },
    "475": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        935
      ],
      "op": "DUP3",
      "path": "6"
    },
    "476": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        935
      ],
      "op": "AND",
      "path": "6"
    },
    "477": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        935
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "478": {
      "fn": "Transfer.transferEther",
      "offset": [
        936,
        945
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "479": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "DUP1",
      "path": "6"
    },
    "480": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "481": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FC"
    },
    "484": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "MUL",
      "path": "6"
    },
    "485": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "486": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "488": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "DUP2",
      "path": "6"
    },
    "489": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "DUP2",
      "path": "6"
    },
    "490": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "DUP2",
      "path": "6"
    },
    "491": {
      "fn": "Transfer.transferEther",
      "offset": [
        936,
        945
      ],
      "op": "DUP6",
      "path": "6"
    },
    "492": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        935
      ],
      "op": "DUP9",
      "path": "6"
    },
    "493": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "DUP9",
      "path": "6"
    },
    "494": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "CALL",
      "path": "6"
    },
    "495": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "496": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "POP",
      "path": "6"
    },
    "497": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "POP",
      "path": "6"
    },
    "498": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "POP",
      "path": "6"
    },
    "499": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "POP",
      "path": "6"
    },
    "500": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "501": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "DUP1",
      "path": "6"
    },
    "502": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "503": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x204"
    },
    "506": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "507": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "508": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "510": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "DUP1",
      "path": "6"
    },
    "511": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "512": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "513": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "515": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "REVERT",
      "path": "6"
    },
    "516": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "517": {
      "fn": "Transfer.transferEther",
      "offset": [
        914,
        946
      ],
      "op": "POP",
      "path": "6"
    },
    "518": {
      "fn": "Transfer.transferEther",
      "offset": [
        436,
        953
      ],
      "op": "POP",
      "path": "6"
    },
    "519": {
      "fn": "Transfer.transferEther",
      "jump": "o",
      "offset": [
        436,
        953
      ],
      "op": "JUMP",
      "path": "6"
    },
    "520": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "521": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "523": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "op": "SUB"
    },
    "532": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "533": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 3
    },
    "534": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "535": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x262"
    },
    "538": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "539": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "541": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "548": {
      "op": "SHL"
    },
    "549": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "550": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "553": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "555": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "556": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "557": {
      "op": "DUP2"
    },
    "558": {
      "op": "SWAP1"
    },
    "559": {
      "op": "MSTORE"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "562": {
      "op": "DUP3"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "op": "MSTORE"
    },
    "565": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "600": {
      "op": "DUP3"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "605": {
      "op": "ADD"
    },
    "606": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "609": {
      "op": "JUMP"
    },
    "610": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "611": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x26C"
    },
    "614": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "616": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x339"
    },
    "619": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "620": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "621": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "622": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "623": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "625": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "632": {
      "op": "SHL"
    },
    "633": {
      "op": "SUB"
    },
    "634": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "635": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "636": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "637": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "640": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "641": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "643": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "652": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "655": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "657": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "658": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "659": {
      "op": "DUP2"
    },
    "660": {
      "op": "SWAP1"
    },
    "661": {
      "op": "MSTORE"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "op": "MSTORE"
    },
    "667": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "702": {
      "op": "DUP3"
    },
    "703": {
      "op": "ADD"
    },
    "704": {
      "op": "MSTORE"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "711": {
      "op": "JUMP"
    },
    "712": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "op": "SUB"
    },
    "721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "722": {
      "branch": 10,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "723": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D"
    },
    "726": {
      "branch": 10,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "736": {
      "op": "SHL"
    },
    "737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "743": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "745": {
      "op": "MSTORE"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "750": {
      "op": "DUP3"
    },
    "751": {
      "op": "ADD"
    },
    "752": {
      "op": "MSTORE"
    },
    "753": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "788": {
      "op": "DUP3"
    },
    "789": {
      "op": "ADD"
    },
    "790": {
      "op": "MSTORE"
    },
    "791": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "798": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "800": {
      "op": "SHL"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "803": {
      "op": "DUP3"
    },
    "804": {
      "op": "ADD"
    },
    "805": {
      "op": "MSTORE"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "808": {
      "op": "ADD"
    },
    "809": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "812": {
      "op": "JUMP"
    },
    "813": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "814": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x336"
    },
    "817": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "818": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x339"
    },
    "821": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "824": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "825": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "826": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "828": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "829": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "836": {
      "op": "SHL"
    },
    "837": {
      "op": "SUB"
    },
    "838": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 7
    },
    "839": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "840": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "op": "SUB"
    },
    "849": {
      "op": "NOT"
    },
    "850": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "851": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "852": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "853": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "854": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "855": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "856": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x40"
    },
    "858": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "859": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "860": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "861": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "862": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "863": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "864": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "865": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "866": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "899": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "900": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "901": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "902": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "903": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "904": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "905": {
      "op": "JUMPDEST"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "910": {
      "op": "DUP3"
    },
    "911": {
      "op": "DUP5"
    },
    "912": {
      "op": "SUB"
    },
    "913": {
      "op": "SLT"
    },
    "914": {
      "op": "ISZERO"
    },
    "915": {
      "op": "PUSH2",
      "value": "0x39B"
    },
    "918": {
      "op": "JUMPI"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "921": {
      "op": "DUP1"
    },
    "922": {
      "op": "REVERT"
    },
    "923": {
      "op": "JUMPDEST"
    },
    "924": {
      "op": "DUP2"
    },
    "925": {
      "op": "CALLDATALOAD"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "op": "SUB"
    },
    "934": {
      "op": "DUP2"
    },
    "935": {
      "op": "AND"
    },
    "936": {
      "op": "DUP2"
    },
    "937": {
      "op": "EQ"
    },
    "938": {
      "op": "PUSH2",
      "value": "0x3B2"
    },
    "941": {
      "op": "JUMPI"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "944": {
      "op": "DUP1"
    },
    "945": {
      "op": "REVERT"
    },
    "946": {
      "op": "JUMPDEST"
    },
    "947": {
      "op": "SWAP4"
    },
    "948": {
      "op": "SWAP3"
    },
    "949": {
      "op": "POP"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "op": "POP"
    },
    "952": {
      "jump": "o",
      "op": "JUMP"
    },
    "953": {
      "op": "JUMPDEST"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "958": {
      "op": "DUP3"
    },
    "959": {
      "op": "DUP5"
    },
    "960": {
      "op": "SUB"
    },
    "961": {
      "op": "SLT"
    },
    "962": {
      "op": "ISZERO"
    },
    "963": {
      "op": "PUSH2",
      "value": "0x3CB"
    },
    "966": {
      "op": "JUMPI"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "969": {
      "op": "DUP1"
    },
    "970": {
      "op": "REVERT"
    },
    "971": {
      "op": "JUMPDEST"
    },
    "972": {
      "op": "POP"
    },
    "973": {
      "op": "CALLDATALOAD"
    },
    "974": {
      "op": "SWAP2"
    },
    "975": {
      "op": "SWAP1"
    },
    "976": {
      "op": "POP"
    },
    "977": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c8e5829a60fe02429e71ead14cc98f0f9ccf5b39",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\"; // permission check\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\"; // Price consumer\n\ncontract Transfer is Ownable {\n    address[] public allowedTokens;\n    mapping(address => address) public tokenPriceFeedMapping;\n\n    // function transferEther(address _token, address _to) public payable {\n    function transferEther(address _to) public payable {\n        // require(tokenIsAllowed(_token), \"Invalid token\");\n\n        require(\n            msg.sender != _to,\n            \"you cant execute a transaction to yourself\"\n        );\n\n        // $20 dolar in wei\n        // uint256 minimunUSD = 20 * 10**18; // convert to wei\n        // require(\n        //     getConvertionRate(msg.value, _token) >= minimunUSD,\n        //     \"You need to spend more ETH!\"\n        // );\n\n        payable(_to).transfer(msg.value);\n    }\n\n    // function getConvertionRate(uint256 ethAmount, address _token)\n    //     public\n    //     view\n    //     returns (uint256)\n    // {\n    //     (uint256 ethPrice, uint256 decimals) = getValueUsdEth(_token);\n    //     uint256 ethAmountInUsd = (ethPrice * ethAmount) / (1 * 10**decimals);\n    //     return ethAmountInUsd;\n    // }\n\n    // function getValueUsdEth(address _token) public view returns (uint256, uint256) {\n    //     // price feed address\n    //     address priceFeedAddress = tokenPriceFeedMapping[_token];\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(priceFeedAddress);\n\n    //     (, int256 price, , , ) = priceFeed.latestRoundData();\n    //     uint256 decimals = uint256(priceFeed.decimals());\n\n    //     return (uint256(price), decimals);\n    // }\n\n    // function addAllowedToken(address _token, address _priceFeed) public onlyOwner {\n    //     allowedTokens.push(_token);\n    //     tokenPriceFeedMapping[_token] = _priceFeed;\n    // }\n\n    // function tokenIsAllowed(address _token) public view returns (bool) {\n    //     for (uint256 i = 0; i < allowedTokens.length; i++) {\n    //         if (allowedTokens[i] == _token) {\n    //             return true;\n    //         }\n    //     }\n    //     return false;\n    // }\n}\n",
  "sourceMap": "226:2006:6:-:0;;;;;;;;;;;;-1:-1:-1;867:23:0;665:10:4;867:9:0;:23::i;:::-;226:2006:6;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;226:2006:6:-;;;;;;;",
  "sourcePath": "contracts/Transfer.sol",
  "type": "contract"
}